{"name":"Php-extractor","tagline":"Libextractor binding for PHP","body":"PHP-Extractor\r\n=============\r\n\r\nLibextractor binding for PHP\r\n\r\n*\"[GNU Libextractor](http://www.gnu.org/software/libextractor/) is a library used to extract \r\nmeta data from files. The goal is to provide developers of file-sharing networks, browsers or \r\nWWW-indexing bots with a universal library to obtain simple keywords and meta data to match \r\nagainst queries and to show to users instead of only relying on filenames.\"*\r\n   -- *Libextractor documentation*\r\n\r\nInstall\r\n-------\r\nYou need to have `libextractor` pre-installed. You can fetch the latest version\r\nfrom http://www.gnu.org/software/libextractor/.\r\n\r\n      git clone https://github.com/mancmelou/php-extractor.git\r\n      cd php-extractor\r\n\r\nOn some installs, you might need to install `php-dev`:\r\n\r\n    sudo apt-get install php5-dev\r\n    \r\nConfigure and build the extension:\r\n\r\n    phpize\r\n    ./configure\r\n    make\r\n\r\nRun the tests and [create an issue][] on github if some of the tests fail.\r\n\r\n    make test\r\n\r\n   [create an issue]: https://github.com/mancmelou/php-extractor/issues\r\n\r\nCopy the extension (modules/extractor.so) to your php extensions directory and\r\nedit your php.ini to load by default.\r\n \r\nUsage\r\n-----\r\n\r\nA simple usage example.\r\n\r\n```php\r\n<?php\r\n   $filepath = '/tmp/test.tgz';\r\n   $keywords = extractor_get_keywords($filepath);\r\n   \r\n   print_r($keywords);\r\n?>\r\n```\r\n\r\nThis will output:\r\n    \r\n      Array\r\n      (\r\n          [embedded filename] => Array\r\n              (\r\n                  [0] => libextractor-1.0.0/\r\n                  [1] => libextractor-1.0.0/ABOUT-NLS\r\n                  [2] => libextractor-1.0.0/README\r\n                  [3] => libextractor-1.0.0/compile\r\n                  [4] => libextractor-1.0.0/config.guess\r\n                  [5] => libextractor-1.0.0/doc/\r\n                  [6] => libextractor-1.0.0/doc/Makefile.am\r\n                  [7] => libextractor-1.0.0/doc/stamp-vti\r\n                  [8] => libextractor-1.0.0/doc/libextractor.texi\r\n                  [9] => libextractor-1.0.0/doc/libextractor.3\r\n                  [10] => libextractor-1.0.0/doc/version.texi\r\n              )\r\n      \r\n          [creation date] => Array\r\n              (\r\n                  [0] => 2012-09-25T19:29:45Z\r\n              )\r\n      \r\n          [format version] => Array\r\n              (\r\n                  [0] => UNIX extended V7 TAR\r\n              )\r\n      \r\n          [mimetype] => Array\r\n              (\r\n                  [0] => application/x-tar\r\n              )\r\n      )\r\n    \r\n\r\nContributing\r\n------------\r\nAny help on this project is very welcome. Please feel free to fork, modify and \r\nmake pull requests. Also make sure you check the TODO file. \r\n\r\nAuthor\r\n------\r\nPhp-extractor was written by Vladimir Ivic (vladimir.ivic at icloud.com) and is\r\nreleased under the BSD license. For details about Libextractor license, please\r\ncheck http://www.gnu.org/software/libextractor/.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}